routes:
  - name: kutuapp-waf
    domain: kutuapp-test.interpolar.ch
    dns_resolver: "cf-production"
    port: 5858
    portSecure: 5858
  - name: kutuapp-waf
    domain: kutuapp-test.sharevic.net
    dns_resolver: "cf-production"
    port: 5858
    portSecure: 5858
  - name: kutuapp-waf
    domain: test-kutuapp.sharevic.net
    dns_resolver: "cf-production"
    port: 5858
    portSecure: 5858

kutuapp-waf:
  replicaCount: 1
  image:
    repository: luechtdiode/nginx-naxsi
    tag: master-1df1bb5
  defaultAffinityRules:
    enabled: false
  network:
    http:
      containerPort: 80
      servicePort: 5858
  service:
    type: NodePort
  resources:
    requests:
      cpu: 0.2
      memory: 32Mi
    limits:
      cpu: 1.00
      memory: 32Mi
  volumeMounts:
    - name: nginx-config
      mountPath: /etc/nginx
  volumes:
    - name: nginx-config
      configMap:
        name: nginx-cm

kutuapp:
  replicaCount: 1
  image:
    repository: luechtdiode/kutuapp
    tag: v2r2b8
  network:
    http:
      servicePort: 5757
      # ingress:
      #  host: competition.sharevic.net
  service:
    type: NodePort
  resources:
    requests:
      cpu: 0.50
      memory: 1.5Gi
    limits:
      cpu: 1.00
      memory: 2.0Gi
  env:
    - name: X_KUTU_SECRET
      valueFrom:
        secretKeyRef:
          name: kutu-postgres-secret
          key: kutusecret
    - name: X_DB_CONFIG_NAME
      value: kutudb_pg
    - name: X_POSTGRES_HOST
      value: postgres
    - name: X_POSTGRES_USER
      valueFrom:
        secretKeyRef:
          name: kutu-postgres-secret
          key: user      
    - name: X_POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: kutu-postgres-secret
          key: password
  defaultAffinityRules:
    enabled: false
  persistence:
    enabled: true
    name: kutuapp-data
    storageClass: microk8s-hostpath
    accessModes: ReadWriteOnce
    size: 1Gi
    annotations:
      pv.kubernetes.io/bound-by-controller: 'yes'
  volumeMounts:
  - mountPath: /home/kutuapp
    subPath: appdataroot
    name: kutuapp-data
  - mountPath: /home/kutuapp/data
    subPath: data
    name: kutuapp-data
  - mountPath: /home/kutuapp/db
    subPath: db
    name: kutuapp-data

mailer:
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}

  replicaCount: 1
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  image:
    repository: ghcr.io/arhat-dev/proton-bridge
    pullPolicy: IfNotPresent
    tag: "1.8"

  env:
  - name: PUB_KEY
    valueFrom:
      secretKeyRef:
        name: bridge-secret
        key: pub.gpg
  - name: SEC_KEY
    valueFrom:
      secretKeyRef:
        name: bridge-secret
        key: secret.gpg
  - name: CRED_DIR_NAME
    valueFrom:
      secretKeyRef:
        name: bridge-secret
        key: cred_dirname.txt
  - name: CRED_FILE_NAME
    valueFrom:
      secretKeyRef:
        name: bridge-secret
        key: cred_filename.txt
  - name: CRED_FILE_CONTENT
    valueFrom:
      secretKeyRef:
        name: bridge-secret
        key: cred.gpg
  - name: PROTONMAIL_USERNAME
    valueFrom:
      secretKeyRef:
        name: bridge-secret
        key: username
  - name: PROTONMAIL_PASSWORD
    valueFrom:
      secretKeyRef:
        name: bridge-secret
        key: password

  podSecurityContext:
    fsGroup: 1000

  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1000

  service:
    type: NodePort
    smtp:
      port: 30587
    imap:
      port: 30143

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
